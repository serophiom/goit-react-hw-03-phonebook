{"version":3,"sources":["FormAddContacts/FormAddContacts.js","Contacts/Contacts.js","Filter/Filter.js","Phonebook/Phonebook.js","App.js","index.js"],"names":["FormAddContacts","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","type","pattern","title","required","onChange","Component","Contacts","contacts","showContacts","onDeleteContact","map","id","onClick","Filter","change","filter","length","Phonebook","formSubmitHandler","alreadyAddedContact","find","contact","alert","uuidv4","handleFilter","deleteContact","contactId","prevState","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","toLowerCase","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6e569de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './FormAddContacts.css'\r\n\r\nclass FormAddContacts extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"input-form\">\r\n                <label>\r\n                    Name<input\r\n                    className=\"add-input\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                /> \r\n                </label>\r\n                <label>\r\n                    Number<input\r\n                    className=\"add-input\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={this.state.number}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className=\"btn-add\" type=\"submit\">Add contact</button>\r\n            </div>  \r\n            </form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormAddContacts;","import React from 'react';\r\nimport './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, showContacts, onDeleteContact }) => {\r\n    return contacts && (\r\n        <ul>\r\n            {showContacts.map(({ id, name, number }) => (\r\n                <li key={id} className=\"contacts__item\">\r\n                    <p className=\"contacts__text\">{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)}>delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n};\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    showContacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ change, filter, contacts }) => {\r\n    function getFilteredName (event) {\r\n        const { value } = event.currentTarget;\r\n        change(value);\r\n    }\r\n\r\n    return contacts.length !== 0 ? (\r\n        <div>\r\n        <label>\r\n            Find contacts by Name<input\r\n            className=\"filter-input\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={getFilteredName}\r\n        />\r\n        </label>\r\n        \r\n        </div>\r\n        ) : (\r\n        <p>There is no contacts in your Phonebook</p>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    change: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport FormAddContacts from '../FormAddContacts/FormAddContacts';\r\nimport Contacts from '../Contacts/Contacts';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from '../Filter/Filter';\r\nimport './Phonebook.css'\r\n\r\nclass Phonebook extends Component {\r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: ''\r\n    }\r\n\r\n    formSubmitHandler = ({ name, number }) => {\r\n        const { contacts } = this.state;\r\n        const alreadyAddedContact = contacts.find(contact => contact.name === name);\r\n        if (alreadyAddedContact) {\r\n            alert(`${alreadyAddedContact.name} is already in contacts`);\r\n            return\r\n        }\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [...contacts, { id: uuidv4(), name, number }]\r\n        }))\r\n    };\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ filter: value });\r\n    };\r\n\r\n    deleteContact = (contactId) => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n        }))\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('contacts')?.length > 0) {\r\n            this.setState({\r\n                contacts: JSON.parse(localStorage.getItem('contacts'))\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        const toLowerCase = filter.toLowerCase();\r\n        const showContacts = contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(toLowerCase)\r\n        );\r\n\r\n        return (\r\n            <div className=\"phonebook\">\r\n                <h1>Phonebook</h1>\r\n                <FormAddContacts onSubmit={this.formSubmitHandler}/>\r\n                <h2>Contacts</h2>\r\n                <Filter change={this.handleFilter} filter={filter} contacts={contacts}/>\r\n                <Contacts contacts={contacts} showContacts={showContacts} onDeleteContact={this.deleteContact}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Phonebook;","import Phonebook from './Phonebook/Phonebook'\n\nconst App = () => {\n  return (\n  \n      <Phonebook />\n    \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}